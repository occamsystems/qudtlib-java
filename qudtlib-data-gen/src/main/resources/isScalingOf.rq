PREFIX qudt: <http://qudt.org/schema/qudt/>
PREFIX unit: <http://qudt.org/vocab/unit/>
PREFIX prefix: <http://qudt.org/vocab/prefix/>
PREFIX kind: <http://qudt.org/vocab/quantitykind/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

CONSTRUCT {
 ?scaledUnit
    qudt:isScalingOf ?baseUnit ;
    qudt:prefix ?prefix ;
    qudt:convertsTo ?convertsTo .
}
#SELECT ?scaledUnit ?baseUnit ?convertsTo ?prefix
where
{
    {
        {

            {
                # select all base units (not using prefixes)
                ?scaledUnit a qudt:Unit ;
                    BIND(REPLACE(STR(?scaledUnit), "^.+/", "") as ?scaledUnitLocalName)
                    FILTER EXISTS {
                        ?prefix
                            a qudt:Prefix ;
                            rdfs:label ?prefixLabel
                        FILTER(CONTAINS(?scaledUnitLocalName, STR(?prefixLabel)))
                    }
            }

            {
                SELECT (CONCAT("\\b(",GROUP_CONCAT(STR(?prefixLabel); separator ="|"), ")") as ?prefixRegex) where
                {
                    ?prefix
                        a qudt:Prefix ;
                        rdfs:label ?prefixLabel .
                 }
            }

        }

        # select all base units (not using prefixes)
        # special handling for prefix + time, e.g.
        # 'unit:MegaYR qudt:isScalingOf unit:YR', not unit:SEC

        ?baseUnit a qudt:Unit ;
        BIND(REPLACE(STR(?baseUnit), "^.+/", "") as ?baseUnitLocalName)
        BIND("(YR|MO|DAY|HR|MIN)\\b" as ?timeRegex)
        FILTER (
                    (
                        REPLACE(?scaledUnitLocalName, CONCAT(?prefixRegex, ?timeRegex), "") = ?scaledUnitLocalName
                        && ?baseUnitLocalName = REPLACE(REPLACE(?scaledUnitLocalName, ?prefixRegex, ""), ?timeRegex, "SEC")
                    ) || (
                        REPLACE(?scaledUnitLocalName, CONCAT(?prefixRegex, ?timeRegex), "") != ?scaledUnitLocalName
                        && ?baseUnitLocalName = REPLACE(?scaledUnitLocalName, ?prefixRegex, "")
                    )
        )
    }
    OPTIONAL {
        ?prefix a qudt:Prefix ;
            rdfs:label ?prefixLabel ;
            FILTER (!CONTAINS(?baseUnitLocalName, "-"))
            FILTER (CONTAINS(?scaledUnitLocalName, STR(?prefixLabel)))
    }
    OPTIONAL {
        ?scaledUnit qudt:conversionMultiplier ?scaledMultiplier . # require any multiplier
        ?baseUnit
            qudt:conversionMultiplier ?cm .
        optional {
            ?baseUnit qudt:conversionOffset ?co
        }
        FILTER( !BOUND(?co) || ?co = 0 )
        FILTER( ?cm = 1 )
        BIND(?baseUnit as ?convertsTo)
    }
    FILTER NOT EXISTS {
        ?scaledUnit qudt:isScalingOf ?baseUnit .
        {
            ?scaledUnit qudt:prefix ?prefix
        } UNION {
            ?scaledUnit qudt:factorUnit ?x . # for derived units, we don't generate a prefix.
        }
    }
}
order by ?baseUnit ?scaledUnit



